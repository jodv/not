#!/usr/bin/env python
'''
sorry for the single char vars, deal with it 
hint: 'f' always refers to the temp file
      'n' is the evernote api wrapper "Notary()"
'''
import argparse
import hashlib
import tempfile
import re
from datetime import date
from subprocess import call
from notpy import Notary, config

authtoken = config.TOKEN
n = Notary(authtoken)


def md5sum(f):
    '''
    only update the remote note if you added something
    '''
    pre_check = hashlib.md5(open(f).read()).hexdigest()
    # actual open the file with your editor
    call([config.EDITOR, f])
    post_check = hashlib.md5(open(f).read()).hexdigest()
    if pre_check == post_check:
        return "unchanged"
    else:
        return "changed"


def check_existing(title, f):
    note = n.search(title)
    if note:
        content = re.sub('<br/>', '\n',n.get_content(note))
        content = re.sub('<.*?>', '', content)
        open(f, 'w').write(content)
    return f


def main():
    parser = argparse.ArgumentParser(description='not')
    parser.add_argument('title', nargs='?', default=str(date.today()))
    args = vars(parser.parse_args())

    with tempfile.NamedTemporaryFile(suffix=".tmp") as f:
        check_existing(args['title'], f.name)
        if md5sum(f.name) == 'changed':
            n.save(open(f.name).read(), title=args['title'])

if __name__ == '__main__':
    main()
